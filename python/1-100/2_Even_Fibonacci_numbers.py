#  Задача 2. Четные числа фибоначи
#
#  Каждый следующий элемент ряда Фибоначчи получается при сложении двух предыдущих.
#  Начиная с 1 и 2, первые 10 элементов будут:
#
#  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
#  Найдите сумму всех четных элементов ряда Фибоначчи, которые не превышают четыре миллиона.
#


def fib_max(array, num):
    '''Функция построения ряда Фибоначчи до указанного числа по стартовому набору

    Принимает на вход массив из 2-х чисел [array], с которых нужно начать построение ряда, и число до которого нужно построить ряд [num]
    Возвращает массив'''
    i = 1 #счетчик
    while array[-1] < num:
        array.append(array[i]+array[i-1]) #добавление в стартовый набор сумму 2-х предыдущих значений
        i += 1
    array.pop() #удаление лишнего элемента, вышедшего за пределы max
    return array #возвращает стартовый набор с заполненными элементами


def even_sum(array):
    '''Функция поиска четных чисел и их суммы

    Принимает на вход массив [array], и суммирует четные числа
    Возвращает число'''
    sum = 0 #переменная, куда будем записывать сумму
    for i in array: #перебираем все элементы в полученном массиве
        if (i % 2) == 0: # ищем четное число
            sum += i #складываем его с пред. суммой
    return sum #возвращаем сумму


start = [1, 2] #стартовый набор
max = 4000000 # максимальное число
print(even_sum(fib_max(start, max))) #выводим на экран
